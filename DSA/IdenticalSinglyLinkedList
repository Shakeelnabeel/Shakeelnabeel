package DSA;

public class IdenticalSinglyLinkedList {

    public static void main(String[] args) {
        SinglyLinkedList singlyLinkedList1 = new SinglyLinkedList();
        SinglyLinkedList singlyLinkedList2 = new SinglyLinkedList();
        singlyLinkedList2.insert(1);
        singlyLinkedList2.insert(2);
        singlyLinkedList2.insert(3);
        singlyLinkedList2.insert(4);
        singlyLinkedList2.insert(5);

        singlyLinkedList1.insert(1);
        singlyLinkedList1.insert(2);
        singlyLinkedList1.insert(3);
        singlyLinkedList1.insert(4);
        singlyLinkedList1.insert(5);

        System.out.println(isIdentical(singlyLinkedList1, singlyLinkedList2));
    }

    private static boolean isIdentical(SinglyLinkedList singlyLinkedList1, SinglyLinkedList singlyLinkedList2) {

        SinglyLinkedList.ListNode head1 = singlyLinkedList1.getHead();
        SinglyLinkedList.ListNode head2 = singlyLinkedList2.getHead();

        while (head1 != null && head2 != null) {
            if (head1.data != head2.data) {
                return false;
            }
            head2 = head2.next;
            head1 = head1.next;
        }
        return head1 == head2;
    }
}
